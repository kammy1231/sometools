#!/bin/bash
#clientchef type cmd
X_cmd(){ # user pw host cmd 
        local U=$1 ; shift # user
        local PW=$1 ; shift # password
        local H=$1 ; shift # host
        local PR='(#|\\$) $'  # prompt regular expression
        expect -c "
    set timeout -1
    spawn ssh -p 10022 -l $U $H
    while (1) {
      expect timeout { break } \"(yes/no)?\" { sleep 1;send \"yes\r\" } \"word: \" { sleep 1;send \"$PW\r\" } -re \"$PR\" { sleep 1;send \"\r\";break }
    }
    expect -re \"$PR\" ; sleep 1; send \"$*\r\"
    
    expect -re \"Report handlers complete\" ; sleep 1; send \"exit\r\"
    "
        echo 'exit expect'
}

RTYPE="${1}"; RUSER="root"; RPASSWD="odebuchan!"; RCMD="${2} ${3} ${4}"

readonly DRsize=/var/tmp/Rsize
Creates()
{
  duline=${line}
  read a<<EOF
${duline}
EOF
  ping -c 1 ${duline} >/dev/null 2>&1
  st=${?}
  if [ ${st} -eq 0 ]; then
    X_cmd ${RUSER} ${RPASSWD} ${duline} "${RCMD}"
    wait
  else
    echo "${duline} is error"
  fi
}
Main()
{
  ret=`cat /etc/client/${RTYPE}.client >${DRsize} 2>/dev/null`
  Rsize=${DRsize}
  cat ${Rsize} | while read line
  do
    Creates
  done
  rm -f ${DRsize} 2>/dev/null
  echo "end current ${HOSTNAME}"
}

#####
Main
#####
